% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis.R
\name{writeFastaClusters}
\alias{writeFastaClusters}
\title{Write Cluster Sequences in Fasta Format}
\usage{
writeFastaClusters(x, clustNames = c(), ffns = "", outdir = "",
  paralogues = T)
}
\arguments{
\item{x}{A \code{pangenome} object.}

\item{clustNames}{The names of the clusters (OGXXXX...) to be written.}

\item{ffns}{The path to 'all.ffn'.}

\item{outdir}{Where to output the files.}

\item{paralogues}{\code{logical}. If paralogues should be also written (if
present).}
}
\value{
Fasta formated files.
}
\description{
Write cluster's cds in fasta format.
}
\details{
#' @name plotRarefaction
#' @title Plot pangenome rarefaction curves
#' @author Ignacio Ferres
#' @description Plot core-genome and pan-genome rarefaction curves.
#' @param x A \code{pangenome} object.
#' @param nsamp \code{integer} The number of random samples with no replace of
#' the lallaa...
#' @details Both the number of shared genes and the total number of genes as
#' a function of the number of organisms sequencially added are plotted. For
#' each new genome added, a sample of \code{nsamp} (\code{default} 10) genomes
#' are evaluated with no replace.
#'
#' A nice \code{ggplot2} plot is drawn. A smooth shadow representing the mean
#' plus or minus a constant times the standard deviation is also ploted.
#' Future versions will allow more customization.
#'
#' Also 2 matrices are invisibly returned, the first for the core rarefaction
#' curve, and the second for the pangenome rarefaction curve. Each cell is the
#' count of either core or pan genes for the ith sample (rows) of jth organism
#' (columns) added.
#' @return A \code{list} of 2 \code{nsamp}*# of organisms \code{matrix} is
#' returned.
#' @importFrom ggplot2 ggplot aes xlab ylab geom_point stat_summary
#' @importFrom reshape2 melt
#' @export
plotRarefaction <- function(x,nsamp=10){

seq(1,ncol(x$panmatrix),1)->br

corev<-matrix(nrow = nsamp,ncol = length(br))->panev
  rownames(corev)<-paste("sample",1:nsamp,sep = "")
  colnames(corev)<-br
  rownames(panev)<-paste("sample",1:nsamp,sep = "")
  colnames(panev)<-br

for (b in 1:length(br)){
    for (i in 1:nsamp){

x$panmatrix[,as.vector(sample(colnames(x$panmatrix),br[b],replace = F)),drop=F]->mu
      if(length(which(rowSums(mu)==0))>0){
        mu[-which(rowSums(mu)==0),,drop=F]->mu
      }
      nrow(mu)->panev[i,b]
      length(which(apply(mu,1,function(x){all(x>0)})))->corev[i,b]
    }
  }
  #require(reshape2)
  melt(corev)->mcorev
  "Core-genome"->mcorev$set
  melt(panev)->mpanev
  "Pan-genome"->mpanev$set
  rbind(mcorev,mpanev)->dat

ggplot(data=dat,aes(x=Var2,y=value,color=set)) +
    xlab("# of genomes") + ylab("# of genes") +
    geom_point(alpha=0.5) +
    stat_summary(fun.data="mean_sdl",geom="smooth",
                 alpha=0.25)

invisible(list(corev,panev))
}

One file per cluster is written. In each file, one sequence from
each organism is written at the top. If \code{paralogues=TRUE}, and some of
the sequences do contain paralogues, those sequences are written at the end
of the file.
}
\author{
Ignacio Ferres
}
